"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.friendshipRouter = void 0;
const express_1 = __importDefault(require("express"));
const MakeFriendshipController_1 = require("../endpoints/makeFriendship/MakeFriendshipController");
const UnfollowFrienController_1 = require("../endpoints/unfolloweFriend/UnfollowFrienController");
const FeedFriendController_1 = require("../endpoints/feedFriend/FeedFriendController");
const MakeFriendshipDatabase_1 = require("../endpoints/makeFriendship/MakeFriendshipDatabase");
const MakeFriendshipBusiness_1 = require("../endpoints/makeFriendship/MakeFriendshipBusiness");
const TokenGenerator_1 = require("../services/TokenGenerator");
const IdGenerator_1 = require("../services/IdGenerator");
const UnfollowFriendDatadabase_1 = require("../endpoints/unfolloweFriend/UnfollowFriendDatadabase");
const UnfollowFriendBusiness_1 = require("../endpoints/unfolloweFriend/UnfollowFriendBusiness");
const FeedFriendDatabase_1 = require("../endpoints/feedFriend/FeedFriendDatabase");
const FeedFriendBusiness_1 = require("../endpoints/feedFriend/FeedFriendBusiness");
exports.friendshipRouter = express_1.default.Router();
const idGenerator = new IdGenerator_1.IdGenerator();
const tokenGenerator = new TokenGenerator_1.TokenGenerator();
const makeFriendshipDatabase = new MakeFriendshipDatabase_1.MakeFriendshipDatabase();
const makeFriendshipBusiness = new MakeFriendshipBusiness_1.MakeFriendshipBusiness(makeFriendshipDatabase, idGenerator, tokenGenerator);
const makeFriendshipController = new MakeFriendshipController_1.MakeFriendshipsController(makeFriendshipBusiness);
const unfollowFriendDatabase = new UnfollowFriendDatadabase_1.UnfollowFriendDatabase();
const unfollowFriendBusiness = new UnfollowFriendBusiness_1.UnfollowFriendBusiness(unfollowFriendDatabase, idGenerator, tokenGenerator);
const unfollowFriendController = new UnfollowFrienController_1.UnfollowFriendController(unfollowFriendBusiness);
const feedFriendDatabase = new FeedFriendDatabase_1.FeedFriendDatabase();
const feedFriendBusiness = new FeedFriendBusiness_1.FeedFriendBusiness(feedFriendDatabase, tokenGenerator);
const feedFriendController = new FeedFriendController_1.FeedFriendController(feedFriendBusiness);
exports.friendshipRouter.post("/request", (req, res) => makeFriendshipController.beFriend(req, res));
exports.friendshipRouter.post("/unfollow", (req, res) => unfollowFriendController.unfollowFriend(req, res));
exports.friendshipRouter.get("/feed", (req, res) => feedFriendController.getFeedFriends(req, res));
