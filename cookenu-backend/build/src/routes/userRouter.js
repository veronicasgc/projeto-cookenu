"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRouter = void 0;
const express_1 = __importDefault(require("express"));
const HashManager_1 = require("../services/HashManager");
const IdGenerator_1 = require("../services/IdGenerator");
const TokenGenerator_1 = require("../services/TokenGenerator");
const CreateUserDatabase_1 = require("../endpoints/createUser/CreateUserDatabase");
const CreateUserBusiness_1 = require("../endpoints/createUser/CreateUserBusiness");
const CreateUserController_1 = require("../endpoints/createUser/CreateUserController");
const LoginUserDatabase_1 = require("../endpoints/loginUser/LoginUserDatabase");
const LoginUserBusiness_1 = require("../endpoints/loginUser/LoginUserBusiness");
const LoginUserController_1 = require("../endpoints/loginUser/LoginUserController");
const GetUserDatabase_1 = require("../endpoints/getUser/GetUserDatabase");
const GetUserBusiness_1 = require("../endpoints/getUser/GetUserBusiness");
const GetUserController_1 = require("../endpoints/getUser/GetUserController");
const DeleteAccountDatabase_1 = require("../endpoints/deleteAccount/DeleteAccountDatabase");
const DeleteAccountBusiness_1 = require("../endpoints/deleteAccount/DeleteAccountBusiness");
const DeleteAccountController_1 = require("../endpoints/deleteAccount/DeleteAccountController");
const ForgotPasswordDatabase_1 = require("../endpoints/forgotPassword/ForgotPasswordDatabase");
const ForgotPasswordBusiness_1 = require("../endpoints/forgotPassword/ForgotPasswordBusiness");
const ForgotPasswordController_1 = require("../endpoints/forgotPassword/ForgotPasswordController");
exports.userRouter = express_1.default.Router();
const tokenGenerator = new TokenGenerator_1.TokenGenerator();
const idGenerator = new IdGenerator_1.IdGenerator();
const hashManager = new HashManager_1.HashManager();
const createUserDatabase = new CreateUserDatabase_1.CreateUserDatabase();
const createUserBusiness = new CreateUserBusiness_1.CreateUserBusiness(idGenerator, tokenGenerator, hashManager, createUserDatabase);
const createUserController = new CreateUserController_1.CreateUserController(createUserBusiness);
const loginUserDatabase = new LoginUserDatabase_1.LoginUserDatabase();
const loginUserBusiness = new LoginUserBusiness_1.LoginUserBusiness(tokenGenerator, hashManager, loginUserDatabase);
const loginUserController = new LoginUserController_1.LoginUserController(loginUserBusiness, loginUserDatabase);
const getUserDatabase = new GetUserDatabase_1.GetUserDatabase();
const getUserBusiness = new GetUserBusiness_1.GetUserBusiness(tokenGenerator, getUserDatabase);
const getUserController = new GetUserController_1.GetUserController(getUserBusiness);
const deleteAccountDatabase = new DeleteAccountDatabase_1.DeleteAccountDatabase();
const deleteAccountBusiness = new DeleteAccountBusiness_1.DeleteAccountBusiness(tokenGenerator, deleteAccountDatabase);
const deleteAccountController = new DeleteAccountController_1.DeleteAccountController(deleteAccountBusiness);
const forgotPasswordDatabase = new ForgotPasswordDatabase_1.ForgotPasswordDatabase();
const forgotPasswordBusiness = new ForgotPasswordBusiness_1.ForgotPasswordBusiness(forgotPasswordDatabase, loginUserDatabase);
const forgotPasswordController = new ForgotPasswordController_1.ForgotPasswordController(forgotPasswordBusiness);
exports.userRouter.post("/signup", (req, res) => createUserController.signup(req, res));
exports.userRouter.post("/login", (req, res) => loginUserController.login(req, res));
exports.userRouter.get("/allUsers", (req, res) => getUserController.allUsers(req, res));
exports.userRouter.get("/getUser/:userId", (req, res) => getUserController.getUser(req, res));
exports.userRouter.delete("/:userId", (req, res) => deleteAccountController.deleteAccount(req, res));
exports.userRouter.post("/forgotPassword", (req, res) => forgotPasswordController.forgotPassword(req, res));
